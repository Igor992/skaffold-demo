# Default values for database.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: postgres
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 15-alpine

env: {}

# If use private registry this is needed
imagePullSecrets: []
nameOverride: ""
fullnameOverride: "db"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  imageregistry: https://hub.docker.com/

# PodSecurityContext holds pod-level security attributes and common container settings. 
# https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#podsecuritycontext-v1-core
podSecurityContext: {}
# runAsUser: 1000
# runAsGroup: 1000
# fsGroup: 1000
# This field will only apply to volume types which support fsGroup based ownership(and permissions).
# It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir.
# Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
# fsGroupChangePolicy: Always

# Field values of container.securityContext take precedence over field values of PodSecurityContext.
# https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#securitycontext-v1-core
securityContext:
  # runAsUser: 2000
  # runAsGroup: 2000
  # This database image will run as root, runAsNonRoot should be true on app image
  runAsNonRoot: false
  allowPrivilegeEscalation: false
  privileged: false
  readOnlyRootFilesystem: false

# https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#servicespec-v1-core
service:
  name: db-svc
  type: ClusterIP
  port: 5432
  protocol: TCP
  # Routes internal traffic to a Service to all endpoints.
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    # cpu: 200m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumeMounts:
- mountPath: /var/lib/postgresql/data
  name: data
- mountPath: /dev/shm
  name: dshm

volumes:
- name: data
  # Idealy this should be PVC if needed on the local custer
  # If need persistent data, kind has StorageClass as provisioner by rancher.io
  emptyDir:
    sizeLimit: 1Gi
- name: dshm
  emptyDir:
    medium: Memory
    sizeLimit: 1Gi

nodeSelector: {}

tolerations: []

affinity:
  # Describes node affinity scheduling rules for the pod
  nodeAffinity:
    # The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions 
    # specified by this field, but it may choose a node that violates one or more of the expressions.
    # The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets
    # all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum
    # by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; 
    # the node(s) with the highest sum are the most preferred.
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      # A node selector term, associated with the corresponding weight.
      preference:
        matchExpressions:
        - key: kubernetes.io/hostname
          # Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
          operator: In
          # If the operator is In or NotIn, the values array must be non-empty.
          # If the operator is Exists or DoesNotExist, the values array must be empty.
          # If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. 
          values:
          - kpack-worker
